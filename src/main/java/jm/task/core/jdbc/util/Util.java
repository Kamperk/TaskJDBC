package jm.task.core.jdbc.util;import jm.task.core.jdbc.model.User;import org.hibernate.SessionFactory;import org.hibernate.boot.registry.StandardServiceRegistryBuilder;import org.hibernate.cfg.Configuration;import org.hibernate.cfg.Environment;import java.sql.*;import java.util.Properties;public class Util {    private static final String URL = "jdbc:mysql://localhost:3306/UserJM?autoReconnect=true&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC";    private static final String USERNAME = "root";    private static final String PASSWORD = "Xxx412334!$";    private static SessionFactory sessionFactory;    public static Connection getConnection() {        Connection connection = null;        try {            connection = DriverManager.getConnection(URL, USERNAME, PASSWORD);        } catch (SQLException e) {            System.out.println("Не удалось подключиться к серверу");        }        return connection;    }    public static SessionFactory getSessionFactory(){        if(sessionFactory==null){            try{                Configuration configuration = new Configuration();                Properties properties = new Properties();                properties.put(Environment.DIALECT, "org.hibernate.dialect.MySQLDialect");                properties.put(Environment.HBM2DDL_AUTO, "create");                properties.put(Environment.DRIVER, "com.mysql.cj.jdbc.Driver");                properties.put(Environment.USER, "root");                properties.put(Environment.PASS, "Xxx412334!$");                properties.put(Environment.URL, "jdbc:mysql://localhost:3306/UserJM?autoReconnect=true&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC");                configuration.setProperties(properties);                configuration.addAnnotatedClass(User.class);                StandardServiceRegistryBuilder builder = new StandardServiceRegistryBuilder();                builder.applySettings(configuration.getProperties()).build();                sessionFactory = configuration                        .buildSessionFactory(builder                            .applySettings(configuration                                .getProperties())                        .build());            }catch (Exception e){                System.out.println("Не удалось подключиться к серверу");            }        }        return sessionFactory;    }}